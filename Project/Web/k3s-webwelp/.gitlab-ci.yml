stages:
  - build
  - test
  - deploy

build:
  # Use the official docker image.
  image: docker:cli
  stage: build
  tags:
    - NESS
  services:
    - docker:dind
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # All branches are tagged with $DOCKER_IMAGE_NAME (defaults to commit ref slug)
  # Default branch is also tagged with `latest`
  script:
    - docker build --pull -t "$DOCKER_IMAGE_NAME" .
    - docker push "$DOCKER_IMAGE_NAME"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
        docker push "$CI_REGISTRY_IMAGE:latest"
      fi
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

test:
  image: docker:cli
  stage: test
  tags:
    - NESS
  services:
    - docker:dind
  variables:
    DOCKER_IMAGE_NAME: "$CI_REGISTRY_IMAGE:latest"
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker run --name flask_test_container -d "$DOCKER_IMAGE_NAME"
    - docker exec flask_test_container pytest
  after_script:
    - docker stop flask_test_container
    - docker rm flask_test_container

deploy webwelp:
  stage: deploy
  tags:
    - K3S
  image: 
    name: bitnami/kubectl:latest
    entrypoint: ['']
  before_script:
    - echo $KUBECONFIG_BASE64 | base64 -d > ./kubeconfig
    - export KUBECONFIG=./kubeconfig
  script:
    - kubectl apply -k .
    - kubectl rollout restart deployment/webwelp -n k3s-webwelp



